20161130
1. AS和git使用
2. Butterknife使用

20161201
1. 项目搭建
    今天：主页面侧滑和侧滑菜单DrawerLayout+NavigationView
          完善一下
          热门仓库

2. 网络请求Retrofit：
    1. http基本知识
    2. OkHttp
    3. Retrofit

总结：
项目搭建：
1. 主页面：
    toolbar使用
    DrawerLayout：抽屉的效果，侧滑
    NavigationView
    切换不同的Fragment
2. 最热门：ViewPager+Tablayout

明天：热门仓库
     网络请求

20161202
1. 完善最热门页面搭建
2. 网络请求

20161208
网络请求和MVP Demo讲解

1. 授权登录

总结：
1. 申请开发者应用
2. 授权登录OAuth的流程：WebView加载登录页面-->临时授权码code-->code获取token-->一般获取用户信息
3. Retrofit的网络请求
4. 自定义拦截器，token加上
5. MVP模式来进行
目标：完成授权登录的流程。
      试着实现一下用户信息的展示
明天：
最热门的数据请求和展示

Retrofit+MVP

1. 语言的展示
2. ListView的数据展示
3. 刷新和加载

1. 接口请求构建出来，数据请求得到

总结：
视图这一块还没有完全完善:待完善

目标：数据展示出来
周末试着完善一下视图

回顾：
最热门仓库列表页面：Retrofit+MVP
1. 语言的本地读取和展示，语言的数据传递
2. 构建请求
3. 仓库列表页面：下拉刷新和上拉加载
注意：
构建请求的时候的Call模型里面的数据模型：RepoResult

仓库列表页面已经完成

Retrofit+MVP

我的收藏页面：数据库来进行功能实现
ORMLite数据库

组--多条仓库信息
可以进行某一仓库的删除、移动、根据组查询仓库信息

ORMLite主要涉及到的内容：
帮助类：数据库、表的创建和数据填充
实体类：注解表明是一个表
操作类：和表是一一对应的关系：数据库表的添删改查

总结:
仓库列表页面完成
数据库简单的介绍

------------------------------------------------------------
一. 每日干货页面(code review)

通过一个第三方的API接口 http://gank.io/api

MVP + Retrofit

几分钟时间看一下接口（每日干货）

http://gank.io/api

25分开始
















